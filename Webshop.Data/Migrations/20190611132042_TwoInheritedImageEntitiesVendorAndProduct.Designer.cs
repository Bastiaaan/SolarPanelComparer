// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webshop.Data;

namespace Webshop.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20190611132042_TwoInheritedImageEntitiesVendorAndProduct")]
    partial class TwoInheritedImageEntitiesVendorAndProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Webshop.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateOfOrder");

                    b.Property<DateTime>("EstimatedDeliveryTime");

                    b.Property<int>("VendorId");

                    b.Property<int?>("{Vendor.Id}");

                    b.HasKey("Id");

                    b.HasIndex("{Vendor.Id}");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Webshop.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Webshop.Data.Models.ProductVendor", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("VendorId");

                    b.Property<int>("Id");

                    b.Property<string>("ImageUrl");

                    b.Property<int>("OrderId");

                    b.Property<double>("Price");

                    b.Property<double>("TAV");

                    b.HasKey("ProductId", "VendorId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("VendorId");

                    b.ToTable("ProductVendor");
                });

            modelBuilder.Entity("Webshop.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Webshop.Data.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("Webshop.Data.Models.Order", b =>
                {
                    b.HasOne("Webshop.Data.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("{Vendor.Id}");
                });

            modelBuilder.Entity("Webshop.Data.Models.Product", b =>
                {
                    b.HasOne("Webshop.Data.Models.Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Webshop.Data.Models.ProductVendor", b =>
                {
                    b.HasOne("Webshop.Data.Models.Order", "OrderDetails")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Webshop.Data.Models.Product", "Product")
                        .WithMany("ProductVendors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Webshop.Data.Models.Vendor", "Vendor")
                        .WithMany("ProductVendors")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
